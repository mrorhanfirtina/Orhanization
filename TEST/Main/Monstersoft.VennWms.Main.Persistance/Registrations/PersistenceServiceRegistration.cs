using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Monstersoft.VennWms.Main.Application.Repositories.AuthenticationRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.BarcodeRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.CommonRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.DepositorRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.LocationRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.LoggingRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.OrderRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.PORepositories;
using Monstersoft.VennWms.Main.Application.Repositories.ProductRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.ReceiptRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.ReturnRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.ShipmentRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.StockRepositories;
using Monstersoft.VennWms.Main.Application.Repositories.TaskRepositories;
using Monstersoft.VennWms.Main.Persistance.Contexts;
using Monstersoft.VennWms.Main.Persistance.Repositories.AuthenticationRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.BarcodeRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.CommonRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.DepositorRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.LocationRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.LoggingRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.OrderRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.PORepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.ProductRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.ReceiptRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.ReturnRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.ShipmentRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.StockRepositories;
using Monstersoft.VennWms.Main.Persistance.Repositories.TaskRepositories;

namespace Monstersoft.VennWms.Main.Persistance.Registrations;

public static class PersistenceServiceRegistration
{
    public static IServiceCollection AddPersistenceServices(this IServiceCollection services, IConfiguration configuration)
    {
        //services.AddDbContext<BaseDbContext>(options => options.UseInMemoryDatabase("VennWmsDba"));
         
        services.AddDbContext<BaseDbContext>(options => options.UseSqlServer(configuration.GetConnectionString("VennWmsDb")));

        services.AddScoped<IBarcodeRepository, BarcodeRepository>();
        services.AddScoped<IBarcodeAreaRepository, BarcodeAreaRepository>();
        services.AddScoped<IBarcodePrinterRepository, BarcodePrinterRepository>();
        services.AddScoped<IPrinterRepository, PrinterRepository>();
        services.AddScoped<IAttributeInputTypeRepository, AttributeInputTypeRepository>();
        services.AddScoped<IContainerUnitRepository, ContainerUnitRepository>();
        services.AddScoped<IProgressStatusRepository, ProgressStatusRepository>();
        services.AddScoped<IReserveReasonRepository, ReserveReasonRepository>();
        services.AddScoped<IStatusRepository, StatusRepository>();
        services.AddScoped<IUnitRepository, UnitRepository>();
        services.AddScoped<IUnsuitReasonRepository, UnsuitReasonRepository>();
        services.AddScoped<IBranchRepository, BranchRepository>();
        services.AddScoped<ICompanyRepository, CompanyRepository>();
        services.AddScoped<IDepositorCompanyRepository, DepositorCompanyRepository>();
        services.AddScoped<ICustomerRepository, CustomerRepository>();
        services.AddScoped<IDepositorRepository, DepositorRepository>();
        services.AddScoped<IDepositorFeatureRepository, DepositorFeatureRepository>();
        services.AddScoped<IUserDepositorRepository, UserDepositorRepository>();
        services.AddScoped<IDistributorRepository, DistributorRepository>();
        services.AddScoped<IReceiverRepository, ReceiverRepository>();
        services.AddScoped<ISupplierRepository, SupplierRepository>();
        services.AddScoped<IBuildingRepository, BuildingRepository>();
        services.AddScoped<ILocationRepository, LocationRepository>();
        services.AddScoped<ISiteDepositorRepository, SiteDepositorRepository>();
        services.AddScoped<ISiteRepository, SiteRepository>();
        services.AddScoped<IStorageSystemRepository, StorageSystemRepository>();
        services.AddScoped<ILogStockRepository, LogStockRepository>();
        services.AddScoped<ILogStockAttributeValueRepository, LogStockAttributeValueRepository>();
        services.AddScoped<ILogStockContainerRepository, LogStockContainerRepository>();
        services.AddScoped<ILogStockReserveReasonRepository, LogStockReserveReasonRepository>();
        services.AddScoped<ILogStockUnsuitReasonRepository, LogStockUnsuitReasonRepository>();
        services.AddScoped<ITransactionLogRepository, TransactionLogRepository>();
        services.AddScoped<IOrderRepository, OrderRepository>();
        services.AddScoped<IOrderAttributeRepository, OrderAttributeRepository>();
        services.AddScoped<IOrderAttributeValueRepository, OrderAttributeValueRepository>();
        services.AddScoped<IOrderItemRepository, OrderItemRepository>();
        services.AddScoped<IOrderItemMemoRepository, OrderItemMemoRepository>();
        services.AddScoped<IOrderItemStockAttrValueRepository, OrderItemStockAttrValueRepository>();
        services.AddScoped<IOrderMemoRepository, OrderMemoRepository>();
        services.AddScoped<IOrderTypeRepository, OrderTypeRepository>();
        services.AddScoped<IPoAttributeRepository, PoAttributeRepository>();
        services.AddScoped<IPoAttributeValueRepository, PoAttributeValueRepository>();
        services.AddScoped<IPoMemoRepository, PoMemoRepository>();
        services.AddScoped<IPoTypeRepository, PoTypeRepository>();
        services.AddScoped<IPurchaseOrderRepository, PurchaseOrderRepository>();
        services.AddScoped<IProductRepository, ProductRepository>();
        services.AddScoped<IProductAttributeRepository, ProductAttributeRepository>();
        services.AddScoped<IProductAttributeValueRepository, ProductAttributeValueRepository>();
        services.AddScoped<IProductStockAttributeRepository, ProductStockAttributeRepository>();
        services.AddScoped<IReceiptRepository, ReceiptRepository>();
        services.AddScoped<IProductDepositorRepository, ProductDepositorRepository>();
        services.AddScoped<IReceiptAttributeRepository, ReceiptAttributeRepository>();
        services.AddScoped<IReceiptAttributeValueRepository, ReceiptAttributeValueRepository>();
        services.AddScoped<IReceiptItemRepository, ReceiptItemRepository>();
        services.AddScoped<IReceiptItemMemoRepository, ReceiptItemMemoRepository>();
        services.AddScoped<IReceiptItmStockAttrValueRepository, ReceiptItmStockAttrValueRepository>();
        services.AddScoped<IReceiptMemoRepository, ReceiptMemoRepository>();
        services.AddScoped<IReceiptTypeRepository, ReceiptTypeRepository>();
        services.AddScoped<IReturnRepository, ReturnRepository>();
        services.AddScoped<IReturnAttributeRepository, ReturnAttributeRepository>();
        services.AddScoped<IReturnAttributeValueRepository, ReturnAttributeValueRepository>();
        services.AddScoped<IReturnItemRepository, ReturnItemRepository>();
        services.AddScoped<IReturnItemMemoRepository, ReturnItemMemoRepository>();
        services.AddScoped<IReturnItmStockAttrValueRepository, ReturnItmStockAttrValueRepository>();
        services.AddScoped<IReturnMemoRepository, ReturnMemoRepository>();
        services.AddScoped<IReturnTypeRepository, ReturnTypeRepository>();
        services.AddScoped<IOrderShipItemRepository, OrderShipItemRepository>();
        services.AddScoped<IOrderShipItemStockRepository, OrderShipItemStockRepository>();
        services.AddScoped<IOrderShipItemTaskRepository, OrderShipItemTaskRepository>();
        services.AddScoped<IOrderShipmentRepository, OrderShipmentRepository>();
        services.AddScoped<IShipmentRepository, ShipmentRepository>();
        services.AddScoped<IShipmentAttributeRepository, ShipmentAttributeRepository>();
        services.AddScoped<IShipmentAttributeValueRepository, ShipmentAttributeValueRepository>();
        services.AddScoped<IShipmentMemoRepository, ShipmentMemoRepository>();
        services.AddScoped<IShipmentTypeRepository, ShipmentTypeRepository>();
        services.AddScoped<IStockRepository, StockRepository>();
        services.AddScoped<IStockAttributeRepository, StockAttributeRepository>();
        services.AddScoped<IStockAttributeValueRepository, StockAttributeValueRepository>();
        services.AddScoped<IStockContainerRepository, StockContainerRepository>();
        services.AddScoped<IStockMemoRepository, StockMemoRepository>();
        services.AddScoped<IStockReserveReasonRepository, StockReserveReasonRepository>();
        services.AddScoped<IStockUnsuitReasonRepository, StockUnsuitReasonRepository>();
        services.AddScoped<ITaskStockRepository, TaskStockRepository>();
        services.AddScoped<ITaskListRepository, TaskListRepository>();
        services.AddScoped<ITransactionTypeRepository, TransactionTypeRepository>();
        services.AddScoped<IWorkTaskRepository, WorkTaskRepository>();
        services.AddScoped<ITaskCodeFormatRepository, TaskCodeFormatRepository>();
        services.AddScoped<IAddressRepository, AddressRepository>();
        services.AddScoped<ILocationProductAttributeRepository, LocationProductAttributeRepository>();
        services.AddScoped<ILocationProductRepository, LocationProductRepository>();
        services.AddScoped<ILocationStockAttributeRepository, LocationStockAttributeRepository>();
        services.AddScoped<ILocationZoneRepository, LocationZoneRepository>();
        services.AddScoped<IZoneRepository, ZoneRepository>();
        services.AddScoped<IBarcodeSupplierRepository, BarcodeSupplierRepository>();
        services.AddScoped<IItemPackTypeRepository, ItemPackTypeRepository>();
        services.AddScoped<IItemUnitConversionRepository, ItemUnitConversionRepository>();
        services.AddScoped<IItemUnitRepository, ItemUnitRepository>();
        services.AddScoped<IProductBarcodeRepository, ProductBarcodeRepository>();
        services.AddScoped<IStockPackTypeRepository, StockPackTypeRepository>();
        services.AddScoped<ILocationLockReasonRepository, LocationLockReasonRepository>();
        services.AddScoped<ILocationPickingTypeRepository, LocationPickingTypeRepository>();
        services.AddScoped<ILocationUnitConstraintRepository, LocationUnitConstraintRepository>();
        services.AddScoped<ILocationProductConstraintRepository, LocationProductConstraintRepository>();
        services.AddScoped<ILocationDimensionRepository, LocationDimensionRepository>();
        services.AddScoped<ILocationFeatureRepository, LocationFeatureRepository>();
        services.AddScoped<ILocationPriorityRepository, LocationPriorityRepository>();
        services.AddScoped<ILocationDepositorRepository, LocationDepositorRepository>();
        services.AddScoped<ILocationCodeFormatRepository, LocationCodeFormatRepository>();
        services.AddScoped<IBuildingDimensionRepository, BuildingDimensionRepository>();
        services.AddScoped<ILocationCoordinateRepository, LocationCoordinateRepository>();
        services.AddScoped<ILockReasonRepository, LockReasonRepository>();
        services.AddScoped<IPickingTypeRepository, PickingTypeRepository>();
        services.AddScoped<ILocationCodeComponentRepository, LocationCodeComponentRepository>();


        services.AddScoped<IEmailAuthenticatorRepository, EmailAuthenticatorRepository>();
        services.AddScoped<IOperationClaimRepository, OperationClaimRepository>();
        services.AddScoped<IOtpAuthenticatorRepository, OtpAuthenticatorRepository>();
        services.AddScoped<IRefreshTokenRepository, RefreshTokenRepository>();
        services.AddScoped<IUserRepository, UserRepository>();
        services.AddScoped<IUserOperationClaimRepository, UserOperationClaimRepository>();
        return services;
    }
}
